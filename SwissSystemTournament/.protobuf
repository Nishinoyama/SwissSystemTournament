syntax = "proto3";

service SwissSystemTournament {
    rpc init(InitMessage) returns (CombinationResultMessage) {}
    rpc sendResults(MatchResultsMessage) returns (CombinationResultMessage) {}
}

// 初期化データ
message InitMessage {
    message Player {
        int32 rating = 1;
    }
    repeated Player players = 1;
}

// 試合結果
message MatchResultsMessage {
    message MatchResult {
    enum Result {
            PLAYER1_WIN = 0;
            PLAYER2_WIN = 1;
            DRAW = 2;
        }

        int32 id = 1;
        int32 round_no = 2;
        int32 player1_id = 3;
        int32 player2_id = 4;
        Result result = 5;
    }

    repeated MatchResult match_results = 1;
}

message CombinationResultMessage {
    // 試合組み合わせ
    message MatchCard {
        int32 id = 1;
        int32 player1_id = 2;
        int32 player2_id = 3;
    }

    // 戦績
    message BattleRecord {
        int32 player_id = 1;
        int32 rank = 2;
        int32 match_point = 3;
        double opponent_match_win_percentage = 4;
        double game_win_percentage = 5;
        double opponent_game_win_percentage = 6;
    }

    repeated MatchCard match_cards = 1;
    repeated BattleRecord battle_records = 2;
}